div#hero.hero-unit
  h1 #{title}
  p #{description}
div#warning-note.alert.alert-block.hide
  p.centered Please do not use TEST certificates in production environment 

div.container.mainForm#start
  div.row
    div.span12
      form(name='form-entercn', method='POST', action='javascript:void(0);').form-horizontal
        div.control-group#cg-cn
          label(for='cn').control-label
            strong 
              | Enter 
              a(href="#", rel="tooltip", "title"="e.g., \"www.your-site.com\", \"John Doe\"") Common Name
              | :
          div.controls
            div.input-append
              input(name='cn', type='text', placeholder="Enter Certificate's Common Name here")#cnStart.span8
              button(onclick='switchToFillInfo()').btn.btn-primary Get Certificate!
  div.row
    div.span12
      p.centered.certCount
        | Generated certificate count: 
        span.badge.badge-info#certs-count NN

- var attributeNames = ["days", "country", "state", "city", "org", "orgUnit", "cn", "email", "pfxPass"]
- var attributeValues = ["365", "US", "Washington", "Seattle", "Cray Inc.", "Chipset", "", "john.doe@cray.com", "password"]
//- var attributePlaceholders = ["365", "US", "Some-State", "", "Internet Widgits Pty Ltd", "", "", "", "password"]
- var attributeLabels = [];
- attributeLabels[0] = "Validity period";
- attributeLabels[1] = "Country Name";
- attributeLabels[2] = "State or Province Name";
- attributeLabels[3] = "Locality Name";
- attributeLabels[4] = "Organization Name";
- attributeLabels[5] = "Organizational Unit";
- attributeLabels[6] = "Common Name";
- attributeLabels[7] = "Email Address";
- attributeLabels[8] = "PFX file password";


- var tooltips = [];
- tooltips[0] = "Validity period in days";
- tooltips[1] = "Country 2 letter code";
- tooltips[2] = "";
- tooltips[3] = "e.g., City";
- tooltips[4] = "e.g., Company name";
- tooltips[5] = "e.g., Division within a company";
- tooltips[6] = "The one that was entered earlier";
- tooltips[7] = "";
- tooltips[8] = "Password that is used to encrypt the PFX file";


div#fillinfo.container.hide
  div.page-header
      h1 Please fill certificate information
          small  (optional)
  div.row
    div.span12
      form(id='form-fillinfo', method='POST', action='javascript:void(0);').form-horizontal
        fieldset
          each name, i in attributeNames
            div.control-group
              label(for=name).control-label 
                if tooltips[i] == ""
                  | #{attributeLabels[i]}
                else
                  | #{attributeLabels[i]} (
                  strong
                    a(href="#", rel="tooltip", "title"=tooltips[i]) ?
                  |)
              div.controls
                input(id=name, name=name, type='text', value='#{attributeValues[i]}').input-xlarge
          div.form-actions
            button(id='button-submit', onclick='switchToDownload()', data-loading-text="Generating...").btn.btn-primary.pull-right.span2 Submit

div#download.container.hide
  div.page-header
      h1.centered Download your certificates below
  div.row
    div.span12
      form(id='form-getzip', action='')
        div.control-group
          label(for='getzip').control-label.span8 ZIP archive containing the unencrypted private key and public certificate
          div.controls
            button(name='getzip', type='submit').btn.btn-info.span3 Download KEY + PEM
  div.row
    div.span12
      form(id='form-getpfx', action='')
        div.control-group
          label(for='getpfx').control-label.span8 
            | PFX file containing the certificate with the private key [ 
            a(href="#", rel="tooltip", "title"="Use the password on the right to install the PFX file") password
            |  :
            strong
              span(name='pfxlabel')#pfxlabel  TOKEN
            |  ]
          button(name='getpfx', type='submit').btn.btn-info.span3 Download PFX
  div#feedback.row
    div.container.feedback
      div.span12
        form(name='form-feedback', method='POST', action='javascript:void(0);')
          div.control-group#cg-feedback
            label(for='feedback')#label-feedback.control-label
              strong Your feedback is my oxygen:
            div.controls
              div.input-append
                input(name='feedback', type='text', placeholder="What's the next feature you'd like to see?")#i-feedback.span8
                button(id='button-feedback', onclick='submit_feedback()', data-loading-text="Submitting...").btn.feedbackButton Submit
script
  function submit_feedback() {
    var feedback = document.getElementById('i-feedback').value;
    console.log('Feedback: ' + feedback);

    if (!feedback || feedback === "") {
      return;
    }

    $('#button-feedback').button('loading');

    $.ajax({
      type: 'POST',
      url: "/feedback",
      data: JSON.stringify({feedback:feedback}),
      contentType: 'application/json',
      success: function(data) {
        $('#button-feedback').button('reset');
        $('#label-feedback').html('<b>Thank you!!</b>');
      }
    });
  }
  function genId() {
    var result='';
    for(var i=0; i<32; i++) {
      result += Math.floor(Math.random()*16).toString(16).toUpperCase();
    }
    return result;
  }
  function switchToFillInfo()  {
    var common_name = document.getElementById('cnStart').value;
    document.getElementById('cn').value = common_name;

    if (!common_name || common_name === "") {
      $('#cg-cn').addClass('error');
      $('#cnStart').attr('placeholder', "Enter Certificate's Common Name here (Must Not Be Empty)");
      return;
    }

    
    $('#start').hide();
    $('#hero').hide();
    $('#warning-note').hide();
    $('#fillinfo').show();

    $('#form-fillinfo').validate({
        rules: {
          days: {
            minlength: 1,
            required: true,
            digits: true
          },
          country: {
            minlength: 2,
            maxlength: 2,
            required: true
          },
          state: {
            minlength: 1,
            required: true
          },
          city: {
            required: false
          },
          org: {
            minlength: 1,
            required: true
          },
          orgUnit: {
            required: false
          },
          cn: {
            minlength: 1,
            required: true
          },
          email: {
            email: true,
            required: false
          },
          pfxPass: {
            minlength: 5,
            required: false
          },
        },
        highlight: function(label) {
          //console.log(label);
          $(label).closest('.control-group').addClass('error');
        },
        success: function(label) {
          //console.log(label);
          //$(label).closest.closest('.control-group').addClass('success');
          $(label).closest('.control-group').removeClass('error');
        }
    });
    console.log('done');
  }
  function switchToDownload()  {
    //$('#start').hide();
    //$('#hero').hide();

    console.log("validity: " + $('#form-fillinfo').valid());
    if (!$('#form-fillinfo').valid()) {
      console.log('info form is not valid. returning...');
      return;
    }


    var certData = {};
    $("#form-fillinfo input[type=text]").each(function() {
      console.log($(this).attr('id') + ' - ' + $(this).val());
      certData[$(this).attr('id')] = $(this).val();
    });

    var certId = genId();

    console.log(certId);
    console.log(JSON.stringify(certData));

    $('#button-submit').button('loading');

    $.ajax({
      type: 'POST',
      url: "/create",
      data: JSON.stringify(certData),
      contentType: 'application/json',
      success: function(data) {
        var result = data;;
        
        //console.log('data:' + data);
        //try {
        //  result = JSON.parse(data);
        //} catch(err) {
        //  console.error('Can not parse data: ' + err);
        //  return;
        //}

        if (!result.id || result.id === "")
        {
          console.error('Did not got cert Id. Can not continue');
          return;
        }
        
        console.log('success! Id:' + result.id);

        $('#form-getzip').attr('action', '/getcert/id/' + result.id + '/type/zip');
        $('#form-getpfx').attr('action', '/getcert/id/' + result.id + '/type/pfx');
        var labelText = $('#pfxlabel').html();
        var pass = certData.pfxPass;

        console.log('Text: ' + $('#pfxlabel').text());
        var newLabel = labelText.replace('TOKEN', pass);
        $('#pfxlabel').html(newLabel);
        console.log('Text: ' + $('#pfxlabel').text());
        console.log('Pass: ' + pass);

        //$('#pfxlabel').attr('text',

        completeSwitchToDownload();
      }
    });
    
  }
  function completeSwitchToDownload() {
    $('#fillinfo').hide();
    $('#download').show();
    $('#warning-note').show();
  }

  // ready
  $(document).ready(function() {
    
    // get certs count
    $.ajax({
      type: 'GET',
      url: "/certcount",
      success: function(data) {
        var result = data;
        if (!result.count || result.count === "")
        {
          console.error('Did not got cert Id. Can not continue');
          return;
        }
        
        console.log('success! count:' + result.count);

        $('#certs-count').text(result.count);
      }
    });

    // activate tooltips
    $("[rel=tooltip]").tooltip();

  });


  // google analytics
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-36157926-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();



